components:
  schemas:
    Size:
      type: object
      properties:
        _id: 
          type: string
        size:
          type: string
        stock: 
          type: number
        weight:
          type: number
    NewProduct:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
        price:
          type: string
        brand:
          type: string
        available:
          type: boolean
        category:
          type: string
        inventory:
          type: array
          items:
            type: object
            properties:
              model:
                type: string
              sizes:
                type: array
                items:
                  type: object
                  properties:
                    size:
                      type: string
                    stock: 
                      type: number
                    weight:
                      type: number
    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        price:
          type: string
        brand:
          type: string
        available:
          type: boolean
        category:
          type: string
        inventory:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
    PopulatedProduct:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        price:
          type: string
        brand:
          type: string
        available:
          type: boolean
        category:
          type: string
        inventory:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              model:
                type: string
              sizes:
                type: array
                items:
                  $ref: "#/components/schemas/Size"

/products:
  get:
    summary: returns information of all the products.
    tags:
      - Products
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Product"
  post:
    summary: create a new product in the database.
    tags:
      - Products
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NewProduct"

/products/{id}:
  get:
    summary: returns information of a product by the given id.
    tags:
      - Products
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: id of the product to get
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
  delete:
    summary: deletes a product from the database by the given id.
    tags:
      - Products
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: id of the product to delete
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  $ref: "#/components/schemas/Product"
                resolvedSizes:
                  type: array
                  items:
                    $ref: "#/components/schemas/Size"

/category/{category}:
  get:
    summary: returns all the products with the given category.
    tags:
      - Products
    parameters:
      - in: path
        name: category
        schema:
          type: string
        required: true
        description: category for the products to get
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Product"
                